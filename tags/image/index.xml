<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>image on DIGITAL LABS</title>
    <link>http://tech.cloudz-labs.io/tags/image/</link>
    <description>Recent content in image on DIGITAL LABS</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 09 Mar 2018 08:23:38 +0900</lastBuildDate>
    
	<atom:link href="http://tech.cloudz-labs.io/tags/image/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Docker 기본(4/8)] docker build &amp; push</title>
      <link>http://tech.cloudz-labs.io/posts/docker/docker-build-push/</link>
      <pubDate>Fri, 09 Mar 2018 08:23:38 +0900</pubDate>
      
      <guid>http://tech.cloudz-labs.io/posts/docker/docker-build-push/</guid>
      <description>Docker 환경에 Service 및 Application을 구동시키 위한 전체적인 과정은 다음과 같습니다.
graph BT; A[Dockerfile] --|build| B[Images] B --|push| C[Docker Registry] C --|pull| B subgraph Local Docker Instance B --|Run| D[Container] end  지금까지는, Docker Registry(Docker Hub)에 배포되어 있는 있는 Image를 이용해 Container를 구동시켰습니다. 이제부터는 위에서 정리한 과정대로, Dockerfile로 Image를 생성하고 다른 Machine에서 배포된 Image로 Container를 실행시켜 보겠습니다.
본 예제는 About storage drivers에 있는 예제를 참고하여 진행했습니다.
 신규 Image 생성에서 배포까지 Dockerfile 작성 image-build-test 폴더를 생성한 뒤, 다음의 내용이 포함된 Dockerfile을 생성합니다.</description>
    </item>
    
  </channel>
</rss>