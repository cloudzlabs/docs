<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>spring cloud stream on DIGITAL LABS</title>
    <link>http://tech.cloudz-labs.io/tags/spring-cloud-stream/</link>
    <description>Recent content in spring cloud stream on DIGITAL LABS</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 17 Oct 2018 10:14:07 +0900</lastBuildDate>
    
	<atom:link href="http://tech.cloudz-labs.io/tags/spring-cloud-stream/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Event Driven Microservice 란?</title>
      <link>http://tech.cloudz-labs.io/posts/event-driven-microservice/</link>
      <pubDate>Wed, 17 Oct 2018 10:14:07 +0900</pubDate>
      
      <guid>http://tech.cloudz-labs.io/posts/event-driven-microservice/</guid>
      <description>MicroService Architecture(MSA)는 loosely coupled를 기반으로 빠른 배포주기, 폴리글랏 프로그래밍, 관심사의 집중 등의 장점을 발휘해 Enterprise IT에서 가장 주목받고 있는 아키텍처 입니다. 또한, 분해된 서비스의 scalabililty, resiliency 등 컨테이너 기반의 플랫폼(Kubernetes 등)과 잘 어우러지는 성향으로 서로 끌어주고 밀어주며 발전하고 있습니다.
하지만 MSA를 도입한 이후 새로운 문제점은 발생하지 않았나요 ? Database Per Service 라는 새로운 요구사항은 잘 지켜지나요 ? rest 통신(synchronized)으로 인한 제약사항은 없나요 ? 분산된 서비스 간 트랜잭션 처리 / 반정규화 된 데이터의 동기 처리는 잘 이루어지고 있나요 ?</description>
    </item>
    
  </channel>
</rss>