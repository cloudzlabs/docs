<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>configMap on DIGITAL LABS</title>
    <link>http://tech.cloudz-labs.io/tags/configmap/</link>
    <description>Recent content in configMap on DIGITAL LABS</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 11 May 2018 13:55:48 +0900</lastBuildDate>
    
	<atom:link href="http://tech.cloudz-labs.io/tags/configmap/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Kubernetes 활용(6/8)] ConfigMap</title>
      <link>http://tech.cloudz-labs.io/posts/kubernetes/configmap/</link>
      <pubDate>Fri, 11 May 2018 13:55:48 +0900</pubDate>
      
      <guid>http://tech.cloudz-labs.io/posts/kubernetes/configmap/</guid>
      <description>이번에는 Kubernetes에서 제공하는 ConfigMap이라는 Object를 보도록 하겠습니다.
ConfigMap 이란? ConfigMap은 컨테이너 이미지에서 사용하는 환경변수와 같은 세부 정보를 분리하고, 그 환경변수에 대한 값을 외부로 노출 시키지 않고 내부에 존재하는 스토리지에 저장해서 사용하는 방법입니다. 혹시 마이크로서비스 아키텍처에서 사용하는 Spring Cloud Config(Config Server)를 사용한 적이 있다면 동일한 역할을 하는 것인지 하는 생각이 들 수 있는데요. Spring Cloud Config 같은 경우에는 설정 파일 자체를 분리하고 파일에 대한 내용이 변경된다면 자동으로 Refresh 해주는 기능을 가지고 있습니다.</description>
    </item>
    
  </channel>
</rss>