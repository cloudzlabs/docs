<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>caas on DIGITAL LABS</title>
    <link>http://tech.cloudz-labs.io/tags/caas/</link>
    <description>Recent content in caas on DIGITAL LABS</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 11 May 2018 17:43:17 +0900</lastBuildDate>
    
	<atom:link href="http://tech.cloudz-labs.io/tags/caas/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Docker 시작하기</title>
      <link>http://tech.cloudz-labs.io/posts/docker/docker-start/</link>
      <pubDate>Fri, 11 May 2018 17:43:17 +0900</pubDate>
      
      <guid>http://tech.cloudz-labs.io/posts/docker/docker-start/</guid>
      <description>리눅스의 컨테이너 기술은 굉장히 오래전부터 있던 기술입니다. 그런데 왜 최근에 화두로 떠오르고 있는걸까요? 저는 컨테이너 기술 활성화에 크게 기여한 것이 바로 Docker라고 생각합니다. Docker는 Docker Store(구 Docker Hub)라는 퍼블릭한 레지스트리를 통해 여러 기업들에서 참여하여 이미지를 제공해주고 있지요. 오픈소스 솔루션 중에는 없는 이미지를 찾는게 더 어려운 것 같습니다. 이처럼 Docker 생태계가 잘 되어 있는데 그 생태계를 사용자들로 하여금 굉장히 쉽게 활용할 수 있도록 편의성을 제공해주고 있기 때문에 사용자들은 원하는 솔루션에 대한 이미지를 받아서 컨테이너로 띄우기만 하면 끝입니다.</description>
    </item>
    
    <item>
      <title>[Docker 기본(1/8)] Hello Docker!</title>
      <link>http://tech.cloudz-labs.io/posts/docker/hello-docker/</link>
      <pubDate>Thu, 08 Mar 2018 18:47:30 +0900</pubDate>
      
      <guid>http://tech.cloudz-labs.io/posts/docker/hello-docker/</guid>
      <description>Docker란 리눅스의 응용프로그램들을 소프트웨어 Container 안에 배치시키는 일을 자동화하는 오픈 소스 프로젝트로서, Docker 공식 문서에 따르면 Containers as a Service(CaaS) Platform으로 정의하고 있습니다.
Docker는 홈페이지에 Docker의 기능을 아래와 같이 명시 하고 있습니다.
 Docker Container는 일종의 소프트웨어 실행에 필요한 모든 것들을 포함하는 완전한 파일 시스템 안에 감싼다. 여기에는 코드, 런타임, 시스템 도구, 시스템 라이브러리 등 서버에 설치되는 무엇이든 전부 아우른다. 이는 실행 중인 환경에 관계 없이 언제나 동일하게 실행될 것을 보증한다.</description>
    </item>
    
  </channel>
</rss>